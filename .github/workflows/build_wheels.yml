name: "Build wheels"

on:
  release:
    types: [ published ]
  workflow_dispatch:


jobs:
  make-wheels:
    name: Make ${{ matrix.os }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
      fail-fast: false

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Build wheels"
        uses: pypa/cibuildwheel@v3.1.3
        with:
          package-dir: .

        env:
          CIBW_ENVIRONMENT: >
            GLORIA_REPACKAGE_CMDSTAN=TRUE

          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: native
          CIBW_BUILD_FRONTEND: build
          CIBW_TEST_COMMAND: python {project}/gloria/tests/test_wheels.py

      - name: "Upload wheel as artifact"
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.os }}-wheel
          path: wheelhouse/*.whl

  make-sdist:
    name: Make source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: artifact-source-dist
        path: dist/*.tar.gz

  publish-pypi:
    name: Publish to PyPI
    needs: [make-wheels, make-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: artifact-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
          skip-existing: true

